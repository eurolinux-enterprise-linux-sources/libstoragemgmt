.TH "lsm_battery_list" 3 "lsm_battery_list" "May 2018" "Libstoragemgmt C API Manual" 
.SH NAME
lsm_battery_list \- Gets a list of batteries on this connection.
.SH SYNOPSIS
.B "int" lsm_battery_list
.BI "(lsm_connect *" conn ","
.BI "const char *" search_key ","
.BI "const char *" search_value ","
.BI "lsm_battery **" bs[] ","
.BI "uint32_t *" count ","
.BI "lsm_flag " flags ");"
.SH ARGUMENTS
.IP "conn" 12
Valid lsm_connect pointer.
.IP "search_key" 12
Search key (NULL for all)
Valid search keys are: "id", and "system_id".
.IP "search_value" 12
Search value.
.IP "bs[]" 12
Output pointer of lsm_battery array.
Returned value must be freed by calling \fBlsm_battery_record_array_free\fP.
.IP "count" 12
Output pointer of uint32_t. Number of batteries.
.IP "flags" 12
Reserved for future use, must be LSM_CLIENT_FLAG_RSVD.
.SH "VERSION"
1.3.
.SH "DESCRIPTION"
Gets a list of batteries on this connection.
When present, super capacitors will also be included.
Battery properties could be retrieved by these functions:
    * \fBlsm_battery_id_get\fP
    * \fBlsm_battery_name_get\fP
    * \fBlsm_battery_system_id_get\fP
    * \fBlsm_battery_type_get\fP
    * \fBlsm_battery_status_get\fP
.SH "CAPABILITY"
LSM_CAP_BATTERIES
.SH "RETURN"
Error code as enumerated by 'lsm_error_number'.
    * LSM_ERR_OK
        On success or searched value not found.
    * LSM_ERR_INVALID_ARGUMENT
        When any argument is NULL or invalid flags or invalid search
        key.
    * LSM_ERR_NO_SUPPORT
        Not supported.
